#!/bin/sh

CFG="$XDG_CONFIG_HOME/ytcli/config"
API="https://www.googleapis.com/youtube/v3/search?part=snippet"
THUMB=

usage() {
cat <<USAGE
Return a list of URLs, and Descriptions, and optionally thumbs for a given search. channel-id will return the ID of a named channel
Usage: 
	ytcli [search|playlist|user|channel] [-t] KEYWORD
	ytcli [channel-id] KEYWORD
USAGE
}

# Helper functions
key() {
	sed -n 's/key=//p' "$CFG"
}

max_results() {
	sed -n 's/max_results=//p' "$CFG"
}

clean() {
	# Take newline seperated input, output url-compatible string
	# Remove trailing '+'
	printf '%s\n' "$@" | tr '\n' '+' | sed 's/+$/\n/'
}

parse () {
	jshon -CQ -e items -a -e snippet -e title -uppe id -e "$1"Id -u
}

parse_t () {
	jshon -CQ -e items -a -e snippet -e title -uppe id -e "$1"Id -uppe snippet -e thumbnails -e high -e url -u
}

# We get back just a token from the search, so append it to create a full url to the video
fixurl_t() {
	while {
		read -r description
		read -r url
		read -r image
	} do
		printf '%s\n%s\n%s\n' "$description" "https://www.youtube.com/watch?v=$url" "$image"
	done
}

fixurl() {
	while {
		read -r description
		read -r url
	} do
		printf '%s\n%s\n' "$description" "https://www.youtube.com/watch?v=$url"
	done
}

get() {
	if test 0 -lt ${#THUMB} ; then 
		curl -s "$1" | parse_t "$2" | fixurl_t
	else
		curl -s "$1" | parse "$2"   | fixurl
	fi
}

chanid() {
	url="https://www.googleapis.com/youtube/v3/search?part=id%2Csnippet&q=$@&type=channel&key=$(key)" 
	curl -s "$url" | jshon -CQ -e items -e id -e id -e channelId -u
}

search() {
	get "$API&maxResults=$(max_results)&key=$(key)&type=video&q=$@" video
}

playlist() {
	get "$API&maxResults=$(max_results)&key=$(key)&type=playlist&q=$@" playlist
}

# TODO: Verify this is working
user() {
	url="https://www.googleapis.com/youtube/v3/channels?part=contentDetails&forUsername=$@&key=$(key)"
	pid="$(curl -s "$url" | jshon -CQ -e items -e -id -e id -u)"
	get "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=$(max_results)&playlistId=$pid&key=$(key)" video
}

channel() {
	get "$API&maxResults=$(max_results)&key=$(key)&type=video&channelId=$(chanid "$@")" channel
}

## Main ## 

# Early exit of only one argument
if test $# -lt 2; then
	usage
	exit 1
fi

# Scrub out our flag
if test $2 = "-t"; then
	THUMB="$1"
	shift && shift
	set -- "$THUMB" "$@"
fi

# Handle our args
case "$1" in
	search)		shift && search		"$(clean "$@")" ;;
	playlist)   shift && playlist	"$(clean "$@")" ;;
	user)		shift && user   	"$(clean "$@")" ;;
	channel) 	shift && channel 	"$(clean "$@")" ;;
	channel-id)	shift && chanid		"$(clean "$@")" ;;
	*) usage ;;
esac
